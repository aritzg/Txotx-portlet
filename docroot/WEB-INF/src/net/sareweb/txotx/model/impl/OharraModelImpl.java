/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package net.sareweb.txotx.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import net.sareweb.txotx.model.Oharra;
import net.sareweb.txotx.model.OharraModel;
import net.sareweb.txotx.model.OharraSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Oharra service. Represents a row in the &quot;Txotx_Oharra&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link net.sareweb.txotx.model.OharraModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OharraImpl}.
 * </p>
 *
 * @author A.Galdos
 * @see OharraImpl
 * @see net.sareweb.txotx.model.Oharra
 * @see net.sareweb.txotx.model.OharraModel
 * @generated
 */
@JSON(strict = true)
public class OharraModelImpl extends BaseModelImpl<Oharra>
	implements OharraModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a oharra model instance should use the {@link net.sareweb.txotx.model.Oharra} interface instead.
	 */
	public static final String TABLE_NAME = "Txotx_Oharra";
	public static final Object[][] TABLE_COLUMNS = {
			{ "oharraId", Types.BIGINT },
			{ "oharMota", Types.VARCHAR },
			{ "irudiKarpetaId", Types.BIGINT },
			{ "irudia", Types.VARCHAR },
			{ "izenburua", Types.VARCHAR },
			{ "testua", Types.VARCHAR },
			{ "esteka", Types.VARCHAR },
			{ "estekaTestua", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Txotx_Oharra (oharraId LONG not null primary key,oharMota VARCHAR(75) null,irudiKarpetaId LONG,irudia VARCHAR(75) null,izenburua VARCHAR(75) null,testua VARCHAR(1000) null,esteka VARCHAR(75) null,estekaTestua VARCHAR(75) null,createDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Txotx_Oharra";
	public static final String ORDER_BY_JPQL = " ORDER BY oharra.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY Txotx_Oharra.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.net.sareweb.txotx.model.Oharra"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.net.sareweb.txotx.model.Oharra"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Oharra toModel(OharraSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Oharra model = new OharraImpl();

		model.setOharraId(soapModel.getOharraId());
		model.setOharMota(soapModel.getOharMota());
		model.setIrudiKarpetaId(soapModel.getIrudiKarpetaId());
		model.setIrudia(soapModel.getIrudia());
		model.setIzenburua(soapModel.getIzenburua());
		model.setTestua(soapModel.getTestua());
		model.setEsteka(soapModel.getEsteka());
		model.setEstekaTestua(soapModel.getEstekaTestua());
		model.setCreateDate(soapModel.getCreateDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Oharra> toModels(OharraSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Oharra> models = new ArrayList<Oharra>(soapModels.length);

		for (OharraSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.net.sareweb.txotx.model.Oharra"));

	public OharraModelImpl() {
	}

	public long getPrimaryKey() {
		return _oharraId;
	}

	public void setPrimaryKey(long primaryKey) {
		setOharraId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_oharraId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Oharra.class;
	}

	public String getModelClassName() {
		return Oharra.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("oharraId", getOharraId());
		attributes.put("oharMota", getOharMota());
		attributes.put("irudiKarpetaId", getIrudiKarpetaId());
		attributes.put("irudia", getIrudia());
		attributes.put("izenburua", getIzenburua());
		attributes.put("testua", getTestua());
		attributes.put("esteka", getEsteka());
		attributes.put("estekaTestua", getEstekaTestua());
		attributes.put("createDate", getCreateDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long oharraId = (Long)attributes.get("oharraId");

		if (oharraId != null) {
			setOharraId(oharraId);
		}

		String oharMota = (String)attributes.get("oharMota");

		if (oharMota != null) {
			setOharMota(oharMota);
		}

		Long irudiKarpetaId = (Long)attributes.get("irudiKarpetaId");

		if (irudiKarpetaId != null) {
			setIrudiKarpetaId(irudiKarpetaId);
		}

		String irudia = (String)attributes.get("irudia");

		if (irudia != null) {
			setIrudia(irudia);
		}

		String izenburua = (String)attributes.get("izenburua");

		if (izenburua != null) {
			setIzenburua(izenburua);
		}

		String testua = (String)attributes.get("testua");

		if (testua != null) {
			setTestua(testua);
		}

		String esteka = (String)attributes.get("esteka");

		if (esteka != null) {
			setEsteka(esteka);
		}

		String estekaTestua = (String)attributes.get("estekaTestua");

		if (estekaTestua != null) {
			setEstekaTestua(estekaTestua);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}
	}

	@JSON
	public long getOharraId() {
		return _oharraId;
	}

	public void setOharraId(long oharraId) {
		_oharraId = oharraId;
	}

	@JSON
	public String getOharMota() {
		if (_oharMota == null) {
			return StringPool.BLANK;
		}
		else {
			return _oharMota;
		}
	}

	public void setOharMota(String oharMota) {
		_oharMota = oharMota;
	}

	@JSON
	public long getIrudiKarpetaId() {
		return _irudiKarpetaId;
	}

	public void setIrudiKarpetaId(long irudiKarpetaId) {
		_irudiKarpetaId = irudiKarpetaId;
	}

	@JSON
	public String getIrudia() {
		if (_irudia == null) {
			return StringPool.BLANK;
		}
		else {
			return _irudia;
		}
	}

	public void setIrudia(String irudia) {
		_irudia = irudia;
	}

	@JSON
	public String getIzenburua() {
		if (_izenburua == null) {
			return StringPool.BLANK;
		}
		else {
			return _izenburua;
		}
	}

	public void setIzenburua(String izenburua) {
		_izenburua = izenburua;
	}

	@JSON
	public String getTestua() {
		if (_testua == null) {
			return StringPool.BLANK;
		}
		else {
			return _testua;
		}
	}

	public void setTestua(String testua) {
		_testua = testua;
	}

	@JSON
	public String getEsteka() {
		if (_esteka == null) {
			return StringPool.BLANK;
		}
		else {
			return _esteka;
		}
	}

	public void setEsteka(String esteka) {
		_esteka = esteka;
	}

	@JSON
	public String getEstekaTestua() {
		if (_estekaTestua == null) {
			return StringPool.BLANK;
		}
		else {
			return _estekaTestua;
		}
	}

	public void setEstekaTestua(String estekaTestua) {
		_estekaTestua = estekaTestua;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Oharra.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Oharra toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Oharra)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		OharraImpl oharraImpl = new OharraImpl();

		oharraImpl.setOharraId(getOharraId());
		oharraImpl.setOharMota(getOharMota());
		oharraImpl.setIrudiKarpetaId(getIrudiKarpetaId());
		oharraImpl.setIrudia(getIrudia());
		oharraImpl.setIzenburua(getIzenburua());
		oharraImpl.setTestua(getTestua());
		oharraImpl.setEsteka(getEsteka());
		oharraImpl.setEstekaTestua(getEstekaTestua());
		oharraImpl.setCreateDate(getCreateDate());

		oharraImpl.resetOriginalValues();

		return oharraImpl;
	}

	public int compareTo(Oharra oharra) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), oharra.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Oharra oharra = null;

		try {
			oharra = (Oharra)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = oharra.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Oharra> toCacheModel() {
		OharraCacheModel oharraCacheModel = new OharraCacheModel();

		oharraCacheModel.oharraId = getOharraId();

		oharraCacheModel.oharMota = getOharMota();

		String oharMota = oharraCacheModel.oharMota;

		if ((oharMota != null) && (oharMota.length() == 0)) {
			oharraCacheModel.oharMota = null;
		}

		oharraCacheModel.irudiKarpetaId = getIrudiKarpetaId();

		oharraCacheModel.irudia = getIrudia();

		String irudia = oharraCacheModel.irudia;

		if ((irudia != null) && (irudia.length() == 0)) {
			oharraCacheModel.irudia = null;
		}

		oharraCacheModel.izenburua = getIzenburua();

		String izenburua = oharraCacheModel.izenburua;

		if ((izenburua != null) && (izenburua.length() == 0)) {
			oharraCacheModel.izenburua = null;
		}

		oharraCacheModel.testua = getTestua();

		String testua = oharraCacheModel.testua;

		if ((testua != null) && (testua.length() == 0)) {
			oharraCacheModel.testua = null;
		}

		oharraCacheModel.esteka = getEsteka();

		String esteka = oharraCacheModel.esteka;

		if ((esteka != null) && (esteka.length() == 0)) {
			oharraCacheModel.esteka = null;
		}

		oharraCacheModel.estekaTestua = getEstekaTestua();

		String estekaTestua = oharraCacheModel.estekaTestua;

		if ((estekaTestua != null) && (estekaTestua.length() == 0)) {
			oharraCacheModel.estekaTestua = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			oharraCacheModel.createDate = createDate.getTime();
		}
		else {
			oharraCacheModel.createDate = Long.MIN_VALUE;
		}

		return oharraCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{oharraId=");
		sb.append(getOharraId());
		sb.append(", oharMota=");
		sb.append(getOharMota());
		sb.append(", irudiKarpetaId=");
		sb.append(getIrudiKarpetaId());
		sb.append(", irudia=");
		sb.append(getIrudia());
		sb.append(", izenburua=");
		sb.append(getIzenburua());
		sb.append(", testua=");
		sb.append(getTestua());
		sb.append(", esteka=");
		sb.append(getEsteka());
		sb.append(", estekaTestua=");
		sb.append(getEstekaTestua());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("net.sareweb.txotx.model.Oharra");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>oharraId</column-name><column-value><![CDATA[");
		sb.append(getOharraId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oharMota</column-name><column-value><![CDATA[");
		sb.append(getOharMota());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>irudiKarpetaId</column-name><column-value><![CDATA[");
		sb.append(getIrudiKarpetaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>irudia</column-name><column-value><![CDATA[");
		sb.append(getIrudia());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>izenburua</column-name><column-value><![CDATA[");
		sb.append(getIzenburua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>testua</column-name><column-value><![CDATA[");
		sb.append(getTestua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>esteka</column-name><column-value><![CDATA[");
		sb.append(getEsteka());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>estekaTestua</column-name><column-value><![CDATA[");
		sb.append(getEstekaTestua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Oharra.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Oharra.class
		};
	private long _oharraId;
	private String _oharMota;
	private long _irudiKarpetaId;
	private String _irudia;
	private String _izenburua;
	private String _testua;
	private String _esteka;
	private String _estekaTestua;
	private Date _createDate;
	private Oharra _escapedModelProxy;
}