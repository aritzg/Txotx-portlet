/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package net.sareweb.txotx.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import net.sareweb.txotx.model.Sailkapena;
import net.sareweb.txotx.model.SailkapenaModel;
import net.sareweb.txotx.model.SailkapenaSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Sailkapena service. Represents a row in the &quot;Txotx_Sailkapena&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link net.sareweb.txotx.model.SailkapenaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SailkapenaImpl}.
 * </p>
 *
 * @author A.Galdos
 * @see SailkapenaImpl
 * @see net.sareweb.txotx.model.Sailkapena
 * @see net.sareweb.txotx.model.SailkapenaModel
 * @generated
 */
@JSON(strict = true)
public class SailkapenaModelImpl extends BaseModelImpl<Sailkapena>
	implements SailkapenaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a sailkapena model instance should use the {@link net.sareweb.txotx.model.Sailkapena} interface instead.
	 */
	public static final String TABLE_NAME = "Txotx_Sailkapena";
	public static final Object[][] TABLE_COLUMNS = {
			{ "sailkapenaId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "screenName", Types.VARCHAR },
			{ "iruzkinKopurua", Types.BIGINT },
			{ "balorazioKopurua", Types.BIGINT },
			{ "argazkiKopurua", Types.BIGINT },
			{ "gertaeraKopurua", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Txotx_Sailkapena (sailkapenaId LONG not null primary key,userId LONG,screenName VARCHAR(75) null,iruzkinKopurua LONG,balorazioKopurua LONG,argazkiKopurua LONG,gertaeraKopurua LONG)";
	public static final String TABLE_SQL_DROP = "drop table Txotx_Sailkapena";
	public static final String ORDER_BY_JPQL = " ORDER BY sailkapena.gertaeraKopurua DESC";
	public static final String ORDER_BY_SQL = " ORDER BY Txotx_Sailkapena.gertaeraKopurua DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.net.sareweb.txotx.model.Sailkapena"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.net.sareweb.txotx.model.Sailkapena"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.net.sareweb.txotx.model.Sailkapena"),
			true);
	public static long USERID_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Sailkapena toModel(SailkapenaSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Sailkapena model = new SailkapenaImpl();

		model.setSailkapenaId(soapModel.getSailkapenaId());
		model.setUserId(soapModel.getUserId());
		model.setScreenName(soapModel.getScreenName());
		model.setIruzkinKopurua(soapModel.getIruzkinKopurua());
		model.setBalorazioKopurua(soapModel.getBalorazioKopurua());
		model.setArgazkiKopurua(soapModel.getArgazkiKopurua());
		model.setGertaeraKopurua(soapModel.getGertaeraKopurua());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Sailkapena> toModels(SailkapenaSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Sailkapena> models = new ArrayList<Sailkapena>(soapModels.length);

		for (SailkapenaSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.net.sareweb.txotx.model.Sailkapena"));

	public SailkapenaModelImpl() {
	}

	public long getPrimaryKey() {
		return _sailkapenaId;
	}

	public void setPrimaryKey(long primaryKey) {
		setSailkapenaId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_sailkapenaId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Sailkapena.class;
	}

	public String getModelClassName() {
		return Sailkapena.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("sailkapenaId", getSailkapenaId());
		attributes.put("userId", getUserId());
		attributes.put("screenName", getScreenName());
		attributes.put("iruzkinKopurua", getIruzkinKopurua());
		attributes.put("balorazioKopurua", getBalorazioKopurua());
		attributes.put("argazkiKopurua", getArgazkiKopurua());
		attributes.put("gertaeraKopurua", getGertaeraKopurua());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long sailkapenaId = (Long)attributes.get("sailkapenaId");

		if (sailkapenaId != null) {
			setSailkapenaId(sailkapenaId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String screenName = (String)attributes.get("screenName");

		if (screenName != null) {
			setScreenName(screenName);
		}

		Long iruzkinKopurua = (Long)attributes.get("iruzkinKopurua");

		if (iruzkinKopurua != null) {
			setIruzkinKopurua(iruzkinKopurua);
		}

		Long balorazioKopurua = (Long)attributes.get("balorazioKopurua");

		if (balorazioKopurua != null) {
			setBalorazioKopurua(balorazioKopurua);
		}

		Long argazkiKopurua = (Long)attributes.get("argazkiKopurua");

		if (argazkiKopurua != null) {
			setArgazkiKopurua(argazkiKopurua);
		}

		Long gertaeraKopurua = (Long)attributes.get("gertaeraKopurua");

		if (gertaeraKopurua != null) {
			setGertaeraKopurua(gertaeraKopurua);
		}
	}

	@JSON
	public long getSailkapenaId() {
		return _sailkapenaId;
	}

	public void setSailkapenaId(long sailkapenaId) {
		_sailkapenaId = sailkapenaId;
	}

	@JSON
	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@JSON
	public String getScreenName() {
		if (_screenName == null) {
			return StringPool.BLANK;
		}
		else {
			return _screenName;
		}
	}

	public void setScreenName(String screenName) {
		_screenName = screenName;
	}

	@JSON
	public long getIruzkinKopurua() {
		return _iruzkinKopurua;
	}

	public void setIruzkinKopurua(long iruzkinKopurua) {
		_iruzkinKopurua = iruzkinKopurua;
	}

	@JSON
	public long getBalorazioKopurua() {
		return _balorazioKopurua;
	}

	public void setBalorazioKopurua(long balorazioKopurua) {
		_balorazioKopurua = balorazioKopurua;
	}

	@JSON
	public long getArgazkiKopurua() {
		return _argazkiKopurua;
	}

	public void setArgazkiKopurua(long argazkiKopurua) {
		_argazkiKopurua = argazkiKopurua;
	}

	@JSON
	public long getGertaeraKopurua() {
		return _gertaeraKopurua;
	}

	public void setGertaeraKopurua(long gertaeraKopurua) {
		_columnBitmask = -1L;

		_gertaeraKopurua = gertaeraKopurua;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Sailkapena.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Sailkapena toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Sailkapena)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		SailkapenaImpl sailkapenaImpl = new SailkapenaImpl();

		sailkapenaImpl.setSailkapenaId(getSailkapenaId());
		sailkapenaImpl.setUserId(getUserId());
		sailkapenaImpl.setScreenName(getScreenName());
		sailkapenaImpl.setIruzkinKopurua(getIruzkinKopurua());
		sailkapenaImpl.setBalorazioKopurua(getBalorazioKopurua());
		sailkapenaImpl.setArgazkiKopurua(getArgazkiKopurua());
		sailkapenaImpl.setGertaeraKopurua(getGertaeraKopurua());

		sailkapenaImpl.resetOriginalValues();

		return sailkapenaImpl;
	}

	public int compareTo(Sailkapena sailkapena) {
		int value = 0;

		if (getGertaeraKopurua() < sailkapena.getGertaeraKopurua()) {
			value = -1;
		}
		else if (getGertaeraKopurua() > sailkapena.getGertaeraKopurua()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Sailkapena sailkapena = null;

		try {
			sailkapena = (Sailkapena)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = sailkapena.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SailkapenaModelImpl sailkapenaModelImpl = this;

		sailkapenaModelImpl._originalUserId = sailkapenaModelImpl._userId;

		sailkapenaModelImpl._setOriginalUserId = false;

		sailkapenaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Sailkapena> toCacheModel() {
		SailkapenaCacheModel sailkapenaCacheModel = new SailkapenaCacheModel();

		sailkapenaCacheModel.sailkapenaId = getSailkapenaId();

		sailkapenaCacheModel.userId = getUserId();

		sailkapenaCacheModel.screenName = getScreenName();

		String screenName = sailkapenaCacheModel.screenName;

		if ((screenName != null) && (screenName.length() == 0)) {
			sailkapenaCacheModel.screenName = null;
		}

		sailkapenaCacheModel.iruzkinKopurua = getIruzkinKopurua();

		sailkapenaCacheModel.balorazioKopurua = getBalorazioKopurua();

		sailkapenaCacheModel.argazkiKopurua = getArgazkiKopurua();

		sailkapenaCacheModel.gertaeraKopurua = getGertaeraKopurua();

		return sailkapenaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{sailkapenaId=");
		sb.append(getSailkapenaId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", screenName=");
		sb.append(getScreenName());
		sb.append(", iruzkinKopurua=");
		sb.append(getIruzkinKopurua());
		sb.append(", balorazioKopurua=");
		sb.append(getBalorazioKopurua());
		sb.append(", argazkiKopurua=");
		sb.append(getArgazkiKopurua());
		sb.append(", gertaeraKopurua=");
		sb.append(getGertaeraKopurua());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("net.sareweb.txotx.model.Sailkapena");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>sailkapenaId</column-name><column-value><![CDATA[");
		sb.append(getSailkapenaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>screenName</column-name><column-value><![CDATA[");
		sb.append(getScreenName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>iruzkinKopurua</column-name><column-value><![CDATA[");
		sb.append(getIruzkinKopurua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>balorazioKopurua</column-name><column-value><![CDATA[");
		sb.append(getBalorazioKopurua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>argazkiKopurua</column-name><column-value><![CDATA[");
		sb.append(getArgazkiKopurua());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gertaeraKopurua</column-name><column-value><![CDATA[");
		sb.append(getGertaeraKopurua());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Sailkapena.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Sailkapena.class
		};
	private long _sailkapenaId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _screenName;
	private long _iruzkinKopurua;
	private long _balorazioKopurua;
	private long _argazkiKopurua;
	private long _gertaeraKopurua;
	private long _columnBitmask;
	private Sailkapena _escapedModelProxy;
}